Below are five curl commands for each of the service classes with parameters set to higher values to simulate increased load and potentially trigger handover due to congestion
Ensure that the Flask server is running and listening on the correct port before executing these commands.
The below commands for power shell:
##########################################################
Voice Traffic:
Invoke-WebRequest -Uri "http://localhost:5000/update_voice_traffic" -Method POST -ContentType "application/json" -Body '{
  "bitrate_range": [128, 256],
  "jitter": 30,
  "delay": 100,
  "packet_loss_rate": 5
}'
##########################################################
Video Traffic:
Invoke-WebRequest -Uri "http://localhost:5000/update_video_traffic" -Method POST -ContentType "application/json" -Body '{
  "num_streams_range": [3, 5],
  "stream_bitrate_range": [2000, 5000],
  "jitter": 50,
  "delay": 150,
  "packet_loss_rate": 5
}'
##########################################################
Gaming Traffic:
Invoke-WebRequest -Uri "http://localhost:5000/update_gaming_traffic" -Method POST -ContentType "application/json" -Body '{
  "bitrate_range": [1000, 2000],
  "jitter": 20,
  "delay": 75,
  "packet_loss_rate": 2
}'
###########################################################
IoT Traffic:
Invoke-WebRequest -Uri "http://localhost:5000/update_iot_traffic" -Method POST -ContentType "application/json" -Body '{
  "packet_size_range": [512, 1024],
  "interval_range": [1, 2],
  "jitter": 10,
  "delay": 50,
  "packet_loss_rate": 1
}'
###########################################################
Data Traffic:
Invoke-WebRequest -Uri "http://localhost:5000/update_data_traffic" -Method POST -ContentType "application/json" -Body '{
  "bitrate_range": [5000, 10000],
  "interval_range": [1, 2],
  "jitter": 25,
  "delay": 100,
  "packet_loss_rate": 3
}'
#############################################################